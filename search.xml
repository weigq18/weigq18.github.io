<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2020-02-09</title>
      <link href="/2020/02/09/2020-02-09/"/>
      <url>/2020/02/09/2020-02-09/</url>
      
        <content type="html"><![CDATA[<h3 id="总体"><a href="#总体" class="headerlink" title="总体"></a>总体</h3><p>2020年春节真的好难，受新冠疫情，导致本该1月31号上班，拖延到2月10号，并且大部分公司10号也只是远程办公。这段时间一直呆家里，按说应该有大量时间学习，但不知道是不是因为被困而导致逆反心理，反而学习效率特别低下。总之，希望疫情能够早点过去。</p><h3 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h3><p>一直没断过，就算是大年三十那天都在背诵，但还没检验过，不知道效果怎么样。找个机会验证一下背诵效果。</p><h3 id="运动"><a href="#运动" class="headerlink" title="运动"></a>运动</h3><p>无无无</p><h3 id="日常技术"><a href="#日常技术" class="headerlink" title="日常技术"></a>日常技术</h3><ul><li><p>jenkins</p><p>一直想使用，都没什么时间研究，趁这段时间学习了下，年后开始应用</p></li><li><p>docker<br>很早就学过，但受限于公司的环境没什么机会用到，这次算是复习了下，把开发环境的工具部署到docker里，总算找到一点用武之地。</p></li></ul><h3 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h3><ul><li>《code》</li></ul><p>原先计划这周看完，但发现中间有几章讲存储器、自动操作的电路原理实现、芯片设计，这里干货太多，看的晕晕乎乎，中间卡了很久，现在看到19章了就比较顺了，这次预估应该在1周内看完。</p><ul><li>《程序员的英语》</li></ul><p>无</p><ul><li>《程序员的算法趣题》</li></ul><p>刷了几道题，前面几章有点简单，没什么意思，看看后面会不会稍微有点意思</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 一周总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 一周总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jenkins安装</title>
      <link href="/2020/02/09/jenkins-an-zhuang/"/>
      <url>/2020/02/09/jenkins-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h2><p>Jenkins是一款开源 CI&amp;CD 软件，用于自动化各种任务，包括构建、测试和部署软件。详细可以参考<a href="https://jenkins.io/zh/doc/" target="_blank" rel="noopener">这里</a>。</p><p><img src="1.jpg" alt="1"></p><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>为了便于迁移，jenkins安装在docker中，但不是直接jenkins镜像安装，而是将jenkins构建在centos镜像中。</p><p>如下图</p><p><img src="2.png" alt="2"></p><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><pre><code># 安装依赖sudo yum install -y yum-utils device-mapper-persistent-data lvm2# 添加docker下载仓库sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo# 安装docker-cesudo yum install docker-ce#换国内源vi /etc/docker/daemon.json{  "registry-mirrors": ["https://registry.docker-cn.com"]}# 启动docker-cesudo systemctl start docker# 验证sudo docker --version</code></pre><h3 id="安装docker-composer"><a href="#安装docker-composer" class="headerlink" title="安装docker-composer"></a>安装docker-composer</h3><p>Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有服务。</p><p>Compose 使用的三个步骤：</p><ul><li>使用 Dockerfile 定义应用程序的环境。</li><li>使用 docker-compose.yml 定义构成应用程序的服务，这样它们可以在隔离环境中一起运行。</li><li>最后，执行 docker-compose up 命令来启动并运行整个应用程序。</li></ul><pre><code>sudo curl -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-composesudo chmod +x /usr/local/bin/docker-composedocker-compose --version</code></pre><h3 id="制作centos自定义镜像"><a href="#制作centos自定义镜像" class="headerlink" title="制作centos自定义镜像"></a>制作centos自定义镜像</h3><p>编辑dockerfile,<code>vi dockerfile</code> 文件内容为：</p><pre><code>FROM centos:7ENV PATH="/opt/bin:${PATH}"RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtimeRUN echo "Asia/Shanghai" &gt;&gt; /etc/timezone</code></pre><p>此镜像指定了centos7官方镜像，并指定的环境路径和时区为东八区</p><p>打包自定义镜像，将镜像名定为qt/centos7-cst-utf8</p><pre><code>#生成镜像docker build -t qt/centos7-cst-utf8 .#查看docker已安装的镜像docker images#删除镜像docker rmi hello-world</code></pre><h3 id="下载jenkins-war和jdk"><a href="#下载jenkins-war和jdk" class="headerlink" title="下载jenkins.war和jdk"></a>下载jenkins.war和jdk</h3><pre><code>#新建目录mkdir /home/jenkinscd /home/jenkins#下载jenkins.war和jdkwget http://ftp-chi.osuosl.org/pub/jenkins/war/2.219/jenkins.warwget https://download.oracle.com/otn/java/jdk/8u241-b07/1f5b5a70bf22433b84d0e960903adac8/jdk-8u241-linux-x64.tar.gz?AuthParam=1580906247_5e2e6badb6d413f9e1a577e1c635dda9</code></pre><p>下载jdk的时候AuthParam参数要重新去or</p><h3 id="docker-composer配置"><a href="#docker-composer配置" class="headerlink" title="docker-composer配置"></a>docker-composer配置</h3><p>编辑docker-compose.yml,<code>vi docker-compose.yml</code> 文件内容为：</p><pre><code>version: '3'services:  jenkins:    container_name: jenkins    #image: centos:7    image: qt/centos7-cst-utf8    restart: always    privileged: true    ports:      - "18080:8080"    volumes:      - /home/jenkins:/opt    environment:      JAVA_HOME: "/opt/jdk"      JAVA_OPTS: "-Duser.timezone=Asia/Shanghai"      JENKINS_HOME: "/opt/jenkins"    command:      "/opt/jdk/bin/java -jar /opt/jenkins.war"</code></pre><p>该配置指定了镜像的8080端口映射到宿主机的18080端口，宿主机的文件卷/home/jenkins映射到镜像的/opt目录中，并制定了jdk等环境变量，最重要的是这个JENKINS_HOME环境变量，这个是jenkins指定的运行文件保存目录，这样可以把实例从镜像中剥离出来，方便迁移。<code>"/opt/jdk/bin/java -jar /opt/jenkins.war"</code>在docker-composer启动容器加载镜像的时候，启动jenkins。</p><h3 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h3><pre><code>#启动所有服务docker-compose up -d#启动jenkins服务docker-compose up -d jenkins#查看启动的服务docker-compose ps#停止jenkinsdocker-compose stop jenkins#进入实例docker-compose exec jenkins bash</code></pre><h2 id="jenkins配置使用"><a href="#jenkins配置使用" class="headerlink" title="jenkins配置使用"></a>jenkins配置使用</h2><p>第一次启动时会推荐安装各种插件，由于国内网络环境问题，很多插件会失败，可以插件管理中在切换国内的插件源</p><p><code>https://jenkins-zh.gitee.io/update-center-mirror/tsinghua/update-center.json</code></p><h3 id="挂载npm、yarn环境"><a href="#挂载npm、yarn环境" class="headerlink" title="挂载npm、yarn环境"></a>挂载npm、yarn环境</h3><p>到各自官网下载npm、yarn已编译好的程序</p><pre><code>cd /home/jenkinswget https://npm.taobao.org/mirrors/node/v12.14.1/node-v12.14.1-linux-x64.tar.xzwget https://github.com/yarnpkg/yarn/archive/v1.21.1.tar.gztar -xvf node-v12.14.1-linux-x64.tar.xztar -zxvf v1.21.1.tar.gz#创建软链ln -s /home/jenkins/jdk1.8.0_241 jdkln -s /home/jenkins/node-v12.14.1-linux-x64 nodeln -s /home/jenkins/yarn-1.21.1 yarn#进入dockercd /home/jenkinsdocker-compose exec jenkins bashmkdir /opt/bin#建立环境软链ln -s /opt/jdk/bin/java javaln -s /opt/node/bin/node nodeln -s /opt/node/bin/npm npmln -s /opt/yarn/bin/yarn yarn</code></pre><p>由于制作镜像时已经已经制定了 环境变量为 <code>PATH="/opt/bin:${PATH}"</code></p><p>所以在jenkins中构建shell脚本时，使用npm等统一的外挂程序，不会因为各个用户的npm版本不同，导致差异，一切以jenkins构建的版本为准。</p><h3 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h3><p>因为代码托管在gitee上，所以这里除了官方推荐的插件外， 需要额外安装gitee插件。</p><p>gitee插件的使用说明，可以参照<a href="https://gitee.com/oschina/Gitee-Jenkins-Plugin?_from=gitee_search" target="_blank" rel="noopener">这里</a></p><p>这里注意一点在新建任务的时候，凭据项应该选用的是 gitee账号或者ssh密钥，而不是gitee Api令牌</p><p><img src="3.png" alt="3"></p><h3 id="构建任务"><a href="#构建任务" class="headerlink" title="构建任务"></a>构建任务</h3><p>写不完了，to be continue………..</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-01-19</title>
      <link href="/2020/01/19/2020-01-19/"/>
      <url>/2020/01/19/2020-01-19/</url>
      
        <content type="html"><![CDATA[<h3 id="总体"><a href="#总体" class="headerlink" title="总体"></a>总体</h3><p>因为意外的突发性工作导致这周总体计划完成度非常低，而且还因为计划中断导致个人的意志也懈怠了。一直没有被严格执行的计划反而容易让人破罐子破瓦，麻木执行计划的意志力。下周调整。</p><h3 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h3><p>可能因为英语每天的单词量少，比较轻松，所以这周执行的比较好。并且抽空看了下累计背过的单词，都还有印象，如果是阅读的方式，这些单词应该不会造成障碍。但如果是主动拼写，还需要再加强才行。下周因为碰到春节，所以不打算加大单词量，目标就是每日维持不断就好。等节后一周再试试加大单词量。</p><h3 id="运动"><a href="#运动" class="headerlink" title="运动"></a>运动</h3><p>周一周二骑行了两天，周三周四周五，因为工作，天气，回老家等问题都中断了。骑行中意外的发现从家里到公司的这段路风景非常的好，一路都是公园，沙滩，寺庙等，强烈感受到生命在于运动的含义。而且骑行相比于开车，有种随心所欲的放松感，遇到风景好的，随时可以驻足欣赏，骑行的过程中，可以看，可以闻还可以触碰，大脑接受的外界信息来源更加丰富多样，可以防止老年痴呆，哈哈。所以骑行现在已经不是需要我被动要求自己执行的事项了，没有下雨和没有其他原因的话我都会去骑行。</p><h3 id="日常技术"><a href="#日常技术" class="headerlink" title="日常技术"></a>日常技术</h3><ul><li><p>hyperf</p><p>这周花了大量时候看了这个框架。php的性能问题，一直被人诟病。然后基于swoole4协程的这个框架，性能上相比传统php提升了非常大，能用同步编程的方式实现底层自动异步。并且模仿了larval框架，有依赖注入，注解等特性。后面准备在一些小项目上试验性使用。</p></li><li><p>运维<br>遇到项目中调用的第三方出现故障，导致通宵开发备用方案，只能说原先项目构建时没有重视第三方故障的问题。不过还好后面比较顺利的完成新方案。</p></li></ul><h3 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h3><ul><li>《code》</li></ul><p>因为工作打断，导致这周只看了《code》看了12、13章。讲解了通过继电器实现了各种逻辑门、与门、或门、与非门、或非门等，并且通过这些门的组织和使用，实现了二进制数的加法器，再利用加法器实现了减法功能。</p><ul><li>《程序员的英语》</li></ul><p>同样只看了两篇，这本书重在动手，需要做练习。这书采用it英语的文章，通过列举文章内主要的英语句式语法，it常用的单词来适应it英文风格。相比code书，这本书比较费神，新一周把这书挪到code书后。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 一周总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 一周总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-01-12</title>
      <link href="/2020/01/12/2020-01-12/"/>
      <url>/2020/01/12/2020-01-12/</url>
      
        <content type="html"><![CDATA[<h3 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h3><p>原计划每天早上来背诵，发现作息调整不过来，将单词背诵挪到下午17点前，在工作间隙背诵，刚好可以转化头脑的工作模式，就当放松。每天10个新单词，在背诵新单词的同时还会有旧单词掺杂其中，就目前来说还比较轻松，再热身一两周后，加大每天等新单词量。</p><h3 id="运动"><a href="#运动" class="headerlink" title="运动"></a>运动</h3><p>因为原计划在每天晚上进行的跑步运动，会把完整的一个晚上时间给分割开，所以想将每天的运动改为每天早上骑行上班，然而自行车在老家，所以这周运动：无，不过我周末已经把自行车带上来了。上班路程有9公里左右，还不知道我这已经废了的身体能不能撑得住，总之先坚持1、2天看情况待定。</p><h3 id="日常技术"><a href="#日常技术" class="headerlink" title="日常技术"></a>日常技术</h3><ul><li><p>mysql</p><p>看了关于mysql8的hash join、索引原理的一些文章，文章是知识普及类的，主要是分享给团队的小伙伴多看看，不过由于我们大部分的环境还是mysql5.6，mysql8感觉已经足够稳定了希望后面有新项目的时候能切换过去。</p></li><li><p>php</p><p>周五的时候看到一个基于swoole的php框架hyperf，看起来性能和组件的集成度都很不错。后面继续跟进学习一下。</p></li><li><p>运维</p><p>这周犯了一个致命的新手错误导致公司的测试机上的 数据库被人拖库了，还被敲诈0.05btc。吸取教训，将端口和密码做一下限制，不能因为测试机就放松警惕，意识会传染的，这次是测试机，如果不注意的话可能生产环境被脱裤就完了。警惕警惕。</p></li></ul><h3 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h3><p>这周把《code》看到12章，一共有25章，照这个进度，内容先易后难的话，估计2、3周可以看完。这个进度预期还是满意的，书看的太快的话消化也不好。这本书挺有意思的，就目前看到部分讲述了盲文、莫斯码、信息的二进制、继电器等。从这些展开到人类信息化的演进历程，对世界的认识有不一样的感受。信息也是互联网的主题，也是现代社会的基石。值得推荐。</p><h3 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h3><p>略，希望提高专注力。</p><p><img src="1.jpg" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 一周总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 一周总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020 todolist</title>
      <link href="/2020/01/08/2020-todolist/"/>
      <url>/2020/01/08/2020-todolist/</url>
      
        <content type="html"><![CDATA[<p>2020年希望以更积极的态度来面对，立下flag，希望在年末总结的时候，不会显得像个笑话～</p><h3 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h3><ul><li>完成记住四级的3千多个单词，把学生时代的债给填上（必须完成）</li><li>复习语法（必须完成）</li><li>翻译一篇技术文章（可选）</li></ul><h3 id="开源项目"><a href="#开源项目" class="headerlink" title="开源项目"></a>开源项目</h3><ul><li>复习php7源码（必须完成）</li><li>创建或参与一个开源项目（待定）</li></ul><h3 id="书籍清单"><a href="#书籍清单" class="headerlink" title="书籍清单"></a>书籍清单</h3><ul><li>番茄工作法图解</li></ul><p><img src="1.png" alt=""></p><ul><li>编码：隐匿在计算机软硬件背后的语言</li></ul><p><img src="2.png" alt=""></p><ul><li>深度学习的数学</li></ul><p><img src="3.png" alt=""></p><ul><li>程序员的英语</li></ul><p><img src="4.png" alt=""></p><p>未完待续…………..</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 文章通达 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文章通达 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>番茄工作法</title>
      <link href="/2020/01/05/fan-qie-gong-zuo-fa/"/>
      <url>/2020/01/05/fan-qie-gong-zuo-fa/</url>
      
        <content type="html"><![CDATA[<h3 id="逝者如斯"><a href="#逝者如斯" class="headerlink" title="逝者如斯"></a>逝者如斯</h3><p>每到年末，朋友圈里洋溢这大票大票的年终总结，里面充斥着今年看了多少书，做了多少事，对新一年的规划等等、等等。我的性格冲动，专注力的程度往往取决于外部因素的刺激程度，除此之外做事就容易虎头蛇尾，执行力太差。为了避免年初的设定目标在年末是笑话的这个情况发生，没有买卖就没有伤害，因此我从来不会设定年初制定目标年末做总结。说实话我非常羡慕这种个人的进步提升能够量化的行为，往年我能够无视是我感觉自己还年轻还有大把的时间可以后面慢慢改正。就在几天前和公司的小朋友吃饭的时候，聊天放嘴炮的时候往他们身上狂灌了几吨的鸡汤，那时我突然意识到已经而立之年的我，却向别人说着自己都没做到的事情，改变已经刻不容缓。</p><h3 id="番茄工作法"><a href="#番茄工作法" class="headerlink" title="番茄工作法"></a>番茄工作法</h3><p>要改变自己执行力或者拖延症，很有多理论但大家都比较推崇番茄工作法。花了1天多的时间把薄薄的书看过一遍，个人感觉此法的核心就是合理设定目标，并按照时间执行段为单位，通过在完成单位目标的承诺和奖励，来增强个人的执行力，从而解决拖延症。</p><p>##### </p><p>番茄工作法说来极其简单，就是：<strong>每工作 25 分钟（即一个番茄时间），休息 5 分钟。每 4 个番茄时间后休息 15 分钟</strong> 。书里介绍了用最简单的纸笔来进行的，网上可以找到很多软件和工具，但我觉得用那些工具反而会分散注意力。</p><h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><ul><li>闹钟</li><li>笔</li><li>纸</li></ul><h4 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h4><p>番茄工作法的第一步就是，<strong>挑选今日要做的任务，写成今天待办</strong>。正如书中说：<strong>承诺是番茄工作法的核心。今天待办表格是每天的承诺</strong>。开始做比从哪里开始重要，因此我感觉代办事项中的执行顺序其实我感觉并不是特别重要，书中要求从最重要的开始，但其实先从容易的事务入手也是一个良好的开始。</p><h4 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h4><ol><li>一个番茄时间（25分钟）是一个基本单位，不可分割；</li><li>一旦在番茄时间内中断了手上的工作，这个番茄时间视为无效，需要重新开始计时；</li><li>休息的铃声响起则停止手上的工作。</li></ol><p>这一步个人感觉是最难的，会形成拖延症都是执行力差的原因。</p><p><img src="%E6%89%A7%E8%A1%8C.png" alt=""></p><h4 id="记录与分析"><a href="#记录与分析" class="headerlink" title="记录与分析"></a>记录与分析</h4><p>执行过程中需要记录这三项：计划番茄数、完成番茄数和中断原因。针对记录的这三项针对性的调整，尽量让减少自己预估与实际情况的误差。</p><h4 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h4><p><strong>番茄工作法事实上是一种对人自控力的训练方法和在现实中延伸，而不是从外部强加于人的法则</strong></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>书本虽然才薄薄百来页，但才粗粗看了一遍，中间也是边看边应用，很多要素还没把握到。写这篇文章用了4个番茄钟，目的一方面锻炼自己的文章表达能力，另一方面也是试验应用番茄工作法。希望后面多一点感悟后能够继续补充完善。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 读后感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文章通达</title>
      <link href="/2020/01/05/wen-zhang-tong-da/"/>
      <url>/2020/01/05/wen-zhang-tong-da/</url>
      
        <content type="html"><![CDATA[<p>世事洞明皆学问,人情练达即文章</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 文章通达 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文章通达 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
